package com.Nezter.ws.api.app;

import java.io.IOException;
import java.net.InetSocketAddress;
import java.util.concurrent.Executor;

import javax.xml.ws.Endpoint;

import org.jboss.com.sun.net.httpserver.HttpContext;
import org.jboss.com.sun.net.httpserver.HttpHandler;
import org.jboss.com.sun.net.httpserver.HttpServer;

public class Main {
	
	public static void main(String[] args) throws IOException {		
		
		Endpoint endpoint = Endpoint.create(new UserServiceImp());
		HttpServer httpServer= new HttpServer() {
			
			@Override
			public void stop(int arg0) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void start() {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void setExecutor(Executor arg0) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void removeContext(HttpContext arg0) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void removeContext(String arg0) throws IllegalArgumentException {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public Executor getExecutor() {
				// TODO Auto-generated method stub
				return null;
			}
			
			@Override
			public InetSocketAddress getAddress() {
				// TODO Auto-generated method stub
				return null;
			}
			
			@Override
			public HttpContext createContext(String arg0, HttpHandler arg1) {
				// TODO Auto-generated method stub
				return null;
			}
			
			@Override
			public HttpContext createContext(String arg0) {
				// TODO Auto-generated method stub
				return null;
			}
			
			@Override
			public void bind(InetSocketAddress arg0, int arg1) throws IOException {
				// TODO Auto-generated method stub
				
			}
		}; 
		//HttpServer httpServer = HttpServer.create(new InetSocketAddress(11080), 0);
        HttpHandler handler = new HttpHandler() {
			
			@Override
			public void handle(org.jboss.com.sun.net.httpserver.HttpExchange arg0) throws IOException {
				arg0.getRequestHeaders().add("Access-Control-Allow-Origin", "*");				
			}
		};      		
        HttpContext context = httpServer.createContext("http://localhost:8900/api/UserWebService",handler);
        httpServer.start();
        endpoint.publish(context);
        		
		//Endpoint.publish("http://localhost:8900/api/UserWebService", new UserServiceImp());		
	}

}
